define({ "api": [  {    "type": "get",    "url": "/auth/me",    "title": "Get user information",    "name": "GetMe",    "group": "auth",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"user\": {\n    \"_id\": \"5aec12683c812fdb68ec4d0f\",\n    \"email\": \"tmp@tmp.com\",\n    \"firstName\": \"foo\",\n    \"lastName\": \"bar\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "server/controllers/auth.js",    "groupTitle": "auth"  },  {    "type": "post",    "url": "/auth/login",    "title": "Login a user",    "name": "Login",    "group": "auth",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email.</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User password.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"user\": {\n    \"_id\": \"5aec12683c812fdb68ec4d0f\",\n    \"email\": \"tmp@tmp.com\",\n    \"firstName\": \"foo\",\n    \"lastName\": \"bar\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "server/controllers/auth.js",    "groupTitle": "auth"  },  {    "type": "get",    "url": "/auth/logout",    "title": "Logout a user",    "name": "Logout",    "group": "auth",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "server/controllers/auth.js",    "groupTitle": "auth"  },  {    "type": "post",    "url": "/auth/register",    "title": "Register a user",    "name": "SignUp",    "group": "auth",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email.</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User first name.</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User last name.</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User password.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 406 Not Acceptable\n{\n  \"message\": \"Email has been registered.\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "server/controllers/auth.js",    "groupTitle": "auth"  },  {    "type": "put",    "url": "/auth/email",    "title": "Update user email",    "name": "UpdateEmail",    "group": "auth",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "server/controllers/auth.js",    "groupTitle": "auth"  },  {    "type": "put",    "url": "/auth/password",    "title": "Update user password",    "name": "UpdatePassword",    "group": "auth",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "oldPassword",            "description": "<p>User old password.</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "newPassword",            "description": "<p>User new password.</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "newPasswordTwice",            "description": "<p>User new password twice.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "server/controllers/auth.js",    "groupTitle": "auth"  },  {    "type": "put",    "url": "/auth/name",    "title": "Update user name",    "name": "UpdateUsername",    "group": "auth",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User first name.</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User last name.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "server/controllers/auth.js",    "groupTitle": "auth"  },  {    "type": "post",    "url": "/book/crawl",    "title": "Crawl books",    "name": "CrawlBooks",    "group": "book",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"books\": [\n    {\n      title: '橡皮擦計畫：兩位天才心理學家，一段改變世界的情誼',\n      authors: [ '麥可．路易士', '吳凱琳' ],\n      publisher: '早安財經',\n      link: 'http://search.books.com.tw/redirect/move/key/%E5%BF%AB%E6%80%9D%E6%85%A2%E6%83%B3/area/mid/item/0010782516/page/1/idx/20/cat/001/pdf/1',\n      imageLink: 'https://im1.book.com.tw/image/getImage?i=https://www.books.com.tw/img/001/078/25/0010782516.jpg&w=85&h=120&v=5aab9cfc',\n      isbn10: '',\n      isbn13: '9789866613944'\n    }\n  ]\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "server/controllers/book.js",    "groupTitle": "book"  },  {    "type": "post",    "url": "/book",    "title": "Create a book",    "name": "CreateBook",    "group": "book",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Book name.</p>"          },          {            "group": "Request body",            "type": "String[]",            "optional": false,            "field": "authors",            "description": "<p>List of authors (Array of Strings).</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "publisher",            "description": "<p>Publisher of the book.</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "previewLink",            "description": "<p>Preview link of the book.</p>"          },          {            "group": "Request body",            "type": "String",            "optional": true,            "field": "isbn_10",            "description": "<p>10-digit ISBN of the book.</p>"          },          {            "group": "Request body",            "type": "String",            "optional": true,            "field": "isbn_13",            "description": "<p>13-digit ISBN of the book.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "server/controllers/book.js",    "groupTitle": "book"  },  {    "type": "delete",    "url": "/book/id",    "title": "Delete a book",    "name": "DeleteBook",    "group": "book",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the book.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "server/controllers/book.js",    "groupTitle": "book"  },  {    "type": "get",    "url": "/book/id",    "title": "Get book",    "name": "GetBook",    "group": "book",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"book\": {\n     \"_id\": \"5aed5b082db4167285600786\",\n     \"name\": \"Thinking, Fast and Slow\",\n     \"authors\": [\"Daniel Kahneman\"],\n     \"publisher\": \"Penguin Group UK\",\n     \"previewLink\": \"http://www.books.com.tw/products/F011910346\",\n     \"isbn_10\": \"0141033576\",\n     \"isbn_13\": \"\"\n   }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "server/controllers/book.js",    "groupTitle": "book"  },  {    "type": "get",    "url": "/book",    "title": "Get book list",    "name": "GetBooks",    "group": "book",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"books\": [\n    {\n      \"_id\": \"5aed5b082db4167285600786\",\n      \"name\": \"Thinking, Fast and Slow\",\n      \"authors\": [\"Daniel Kahneman\"],\n      \"publisher\": \"Penguin Group UK\",\n      \"previewLink\": \"http://www.books.com.tw/products/F011910346\",\n      \"isbn_10\": \"0141033576\",\n      \"isbn_13\": \"\"\n    }\n  ]\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "server/controllers/book.js",    "groupTitle": "book"  },  {    "type": "put",    "url": "/book/id",    "title": "Update a book",    "name": "UpdateBook",    "group": "book",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the book.</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Book name.</p>"          },          {            "group": "Request body",            "type": "String[]",            "optional": false,            "field": "authors",            "description": "<p>List of authors (Array of Strings).</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "publisher",            "description": "<p>Publisher of the book.</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "previewLink",            "description": "<p>Preview link of the book.</p>"          },          {            "group": "Request body",            "type": "String",            "optional": true,            "field": "isbn_10",            "description": "<p>10-digit ISBN of the book.</p>"          },          {            "group": "Request body",            "type": "String",            "optional": true,            "field": "isbn_13",            "description": "<p>13-digit ISBN of the book.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "server/controllers/book.js",    "groupTitle": "book"  }] });
